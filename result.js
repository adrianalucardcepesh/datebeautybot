const db = require('./database/db-pool.js');
const showProfile = async (ctx) => {
    function telegramId(ctx) {
        return ctx.from.id;
    }

    let conn;
    let user; // Define the user variable at the function level

    try {
        const userId = telegramId(ctx);

        conn = await db.getConnection();

        [user] = await conn.query('SELECT * FROM users WHERE telegram_id = ?', [userId]);

        if (!user ) {
            let text_1 = `'–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞! üí•'`;
            ctx.reply(text_1, {
                reply_markup: {
                    keyboard: [
                        [{ text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é' }],
                    ],
                    resize_keyboard: true,
                    one_time_keyboard: true,
                },
            });
        } else {
            const { name, surname, gender, city, age, info, search, goal, fileId, fileType } = user;

            let text = `–í–ê–®–ê –ê–ù–ö–ï–¢–ê:\n\n`;
            text += `–ò–º—è: ${name}\n`;
            text += `–§–∞–º–∏–ª–∏—è: ${surname}\n`;
            text += `–ü–æ–ª : ${gender}\n`;
            text += `–ì–æ—Ä–æ–¥, –°—Ç—Ä–∞–Ω–∞: ${city}\n`;
            text += `–í–æ–∑—Ä–∞—Å—Ç: ${age}\n`;
            text += `–û —Å–µ–±–µ: ${info}\n`;
            text += `–ò—â—É: ${search}\n`;
            text += `–¶–µ–ª—å –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞: ${goal}\n`;

            ctx.reply(text, {
                reply_markup: {
                    keyboard: [
                        [{ text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ' }],
                    ],
                    resize_keyboard: true,
                    one_time_keyboard: true,
                },
            });

            // Asynchronous block to send photo or video after basic data
            if (fileId && fileType) {
                if (fileType === 'photo') {
                    await ctx.telegram.sendPhoto(ctx.chat.id, fileId);
                } else if (fileType === 'video') {
                    await ctx.telegram.sendVideo(ctx.chat.id, fileId);
                }
            }

            // Create a keyboard for updating the profile
            const keyboard = [
                [{ text: '–ò–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É üìù', callback_data: 'updater' }],
                // [{ text: '–ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞ –∞–Ω–∫–µ—Ç—É üëÆüèº‚Äç', callback_data: 'complain' }],
            ];
            await ctx.telegram.sendMessage(ctx.chat.id, '–ö–∞–∫ –≤–∞–º –∞–Ω–∫–µ—Ç–∞? ', {
                reply_markup: {
                    inline_keyboard: keyboard,
                },
            });
        }
    } catch (err) {
        console.error(err);
        ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–Ω–∫–µ—Ç—ã');
    } finally {
        if (conn) conn.release();
    }
};

module.exports = {
    showProfile
};