// const { Telegraf, Markup, Scenes, session } = require('telegraf');
// const bot = require('../config/config');
//
//
// const searchCommand = async (ctx) => {
//     try {
//         await ctx.reply(
//             '–°–Ω–∞—á–∞–ª–∞ –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è —Å –≤–∞—à–∏–º –ø–æ–ª–æ–º ‚öß:',
//             Markup.inlineKeyboard([
//                 [Markup.button.callback('–Ø –ø–∞—Ä–µ–Ω—å üë®', 'mann')],
//                 [Markup.button.callback('–Ø –¥–µ–≤—É—à–∫–∞ üë±‚Äç‚ôÄÔ∏è', 'womann')],
//             ])
//         );
//         await ctx.telegram.sendMessage(ctx.chat.id, '–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–≥–æ –≤—ã –∏—â–∏—Ç–µ: ', {
//             reply_markup: {
//                 inline_keyboard: [
//                     [Markup.button.callback('–ü–∞—Ä–Ω—è üë®', 'search_mann')],
//                     [Markup.button.callback('–î–µ–≤—É—à–∫—É üë±‚Äç‚ôÄÔ∏è', 'search_womann')],
//                     [Markup.button.callback('–õ—é–±–æ–π –ø–æ–ª üë§', 'any')],
//                 ],
//             },
//         });
//     } catch (error) {
//         console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:', error);
//         ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è.');
//     }
// };
//
//
//
//
// module.exports = {
//
//     searchCommand
// };
